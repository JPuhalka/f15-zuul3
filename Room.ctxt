#BlueJ class context
comment0.params=description
comment0.target=Room(java.lang.String)
comment0.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n\ \ \ \ \ \ no\ Item\ or\ Challenge\ present\ in\ the\ room\r\n
comment1.params=roomDescription\ item\ itemDescription
comment1.target=void\ addItem(java.lang.String,\ ItemType,\ java.lang.String)
comment1.text=\r\n\ Define\ an\ item\ or\ feature\ in\ this\ room\ that\ can\ be\ interacted\ with\r\n\ @param\ itemDescription\ -\ a\ string\ depicting\ the\ item\ or\ feature\ in\ the\ area\ that\ can\ be\ interacted\ with\r\n\ @param\ item\ -\ the\ enum\ of\ the\ item\ or\ feature\ in\ the\ room\ used\ by\ the\ game\r\n
comment10.params=itemIWant
comment10.target=Item\ takeItem(ItemType)
comment10.text=\ \r\n\ a\ method\ to\ remove\ an\ item\ from\ a\ room\ after\ it\ has\ been\ taken\ by\ a\ player\r\n\ returns\ the\ item\ in\ question\r\n
comment11.params=exitToTest
comment11.target=boolean\ canExit(java.lang.String)
comment11.text=\r\n\ Test\ to\ see\ if\ player\ can\ move\ out\ of\ this\ room\ unimpeeded\r\n
comment12.params=
comment12.target=java.lang.String\ getChallengeText()
comment12.text=\r\n\ returns\ the\ description\ of\ challenges\ in\ the\ room\r\n
comment13.params=direction
comment13.target=Room\ getExit(java.lang.String)
comment13.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment2.params=challengeDescription\ challenge\ blockedExit
comment2.target=void\ addChallenge(java.lang.String,\ ChallengeType,\ java.lang.String)
comment2.text=\r\n\ Define\ an\ item\ or\ feature\ in\ this\ room\ that\ can\ be\ interacted\ with\r\n\ @param\ challengeDescription\ -\ a\ string\ depicting\ an\ obstacle\ in\ the\ room,\ hindering\ use\ of\ an\ exit\r\n\ @param\ challenge\ -\ the\ enum\ of\ the\ challenge\ in\ the\ room\r\n\ @param\ blockedExit\ -\ the\ String\ corresponding\ to\ an\ exit\ in\ the\ room\ being\ impeeded\ by\ the\ challenge.\r\n
comment3.params=direction\ neighbor
comment3.target=void\ setExit(java.lang.String,\ Room)
comment3.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment4.params=
comment4.target=java.lang.String\ getShortDescription()
comment4.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment5.params=
comment5.target=java.lang.String\ getLongDescription()
comment5.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment6.params=
comment6.target=java.lang.String\ getRoomExamination()
comment6.text=\r\n\ Returns\ a\ description\ of\ the\ room\ including\ any\ items\ or\ challenges\ in\ the\ room\ in\ the\ form\:\r\n\ \ \ \ You\ are\ in\ the\ bedroom.\r\n\ \ \ \ There\ is\ a\ bottle\ of\ perfume\ on\ a\ nightstand.\r\n\ \ \ \ \r\n\ \ \ \ or\r\n\ \ \ \ \r\n\ \ \ \ You\ are\ in\ a\ long\ hallway.\r\n\ \ \ \ There\ is\ a\ drowsy\ guard\ blocking\ the\ eastern\ exit.\r\n\ \ \ \ \r\n\ \ \ \ @return\ A\ detailed\ examination\ of\ the\ room,\ plus\ the\ exits\r\n
comment7.params=
comment7.target=java.lang.String\ getExitString()
comment7.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment8.params=
comment8.target=java.lang.String\ getLookString()
comment8.text=\r\n\ Returns\ a\ string\ describing\ any\ items\ or\ challenges\ in\ the\ room,\ for\ example\r\n\ "There\ is\ a\ locked\ gate\ at\ the\ east\ end\ of\ the\ courtyard"\r\n
comment9.params=itemType
comment9.target=Item\ hasItem(ItemType)
comment9.text=\r\n\ a\ method\ to\ test\ to\ see\ if\ a\ room\ has\ an\ item\ of\ a\ certain\ type,\ if\ so\ returns\ that\ item,\ otherwise\ returns\ null\r\n
numComments=14
